setwd("~/code/kaggleProject/dataScienceLondon")
source('pca_analysis.R')
print(summary(tune.out))
i=2
train_set = cbind(pca_train$scores[,1:i], train_truth[1:i,])
View(train_set)
train_set = cbind(pca_train$scores[1:700,1:i], train_truth[1:700,])
cv_set = cbind(pca_train$scores[701:1000,1:i], train_truth[701:1000,])
svm.formula =  as.formula(paste(colnames(train_set)[i+1],
paste(colnames(train_deduced)[1:i],
collapse='+'),
sep='~'))
svm.formula
svm.formula =  as.formula(paste(colnames(train_set)[i+1],
paste(colnames(train_set)[1:i],
collapse='+'),
sep='~'))
svm.formula
colnames(train_set)[i+1]
View(train_set)
i
colnames(train_set)
colnames(train_set)[i+1] = "outcome"
svm.formula =  as.formula(paste(colnames(train_set)[i+1],
paste(colnames(train_set)[1:i],
collapse='+'),
sep='~'))
svm.formula
aa=train_set[-(i+1)]
?plot
source('pca_analysis.R')
View(cv.result)
correct_ratio
temp_table
truth
pred=cv_pred
str(train_set)
train_deduced=cbind(pca_train$scores[,1:8], train_truth)
str(train_deduced)
train_set = cbind(pca_train$scores[1:700,1:i], train_truth[1:700,])
str(train_set)
cv_set = pca_train$scores[701:1000,1:i]
View(cv_set)
View(train_set)
str(train_set)
train_set = as.data.frame(cbind(pca_train$scores[1:700,1:i], train_truth[1:700,]))
View(train_set)
str(train_set)
train_set = cbind(pca_train$scores[1:700,1:i], train_truth[1:700,])
View(train_set)
aa=train_truth[1:700]
aa=train_truth[1:700]$V1
aa=train_truth$V1[1:700]
str(aa)
train_set = cbind(pca_train$scores[1:700,1:i], train_truth$V1[1:700])
str(train_set)
View(train_set)
train_deduced=cbind(pca_train$scores[,1:8], train_truth)
str(train_deduced)
train_set = train_deduced[1:700,]
str(train_set)
cv_set = train_deduced[701:1000,]
View(cv_set)
cv_pred = predict(svm.model, newdata=cv_set[-(i+1)])
aa=cv_set[-(i+1)]
View(aa)
i=2
train_deduced=cbind(pca_train$scores[,1:i], train_truth)
colnames(train_deduced)[i+1] = "outcome"
train_set = train_deduced[1:700,]
cv_set = train_deduced[701:1000,]
svm.formula =  as.formula(paste(colnames(train_set)[i+1],
paste(colnames(train_set)[1:i],
collapse='+'),
sep='~'))
svm.model = svm(svm.formula, data=train_set,
kernal="radial", cost=1)
aa=cv_set[-(i+1)]
View(aa)
cv_pred = predict(svm.model, newdata=cv_set[-(i+1)])
temp_table = table(pred=cv_pred, truth=train_truth[701:1000,])
correct_ratio = sum(diag(temp_table))/sum(temp_table)
correct_ratio
source('pca_analysis.R')
traceback
lm(list=ls())
rm(list=ls())
source('pca_analysis.R')
source('pca_analysis.R')
correct_ratio
i
cv.result[i-1,]
cv.result[i-1,]=c(i, correct_ratio)
cv.result = data.frame(i=0, correctness=0)
i=2
cv.result[i-1,]=c(i, correct_ratio)
View(cv.result)
best.ratio
source('pca_analysis.R')
source('pca_analysis.R')
View(cv.result)
View(cv.result)
View(cv.result)
summary(svm.bestmod)
test_data = read.csv('data/test.csv',header=F)
S_test = cov(test_data)
pca_test = princomp(test_data, cor=S_test)
test_reduced = pca_test$scores[,1:best.length]
best.length=40
test_reduced = pca_test$scores[,1:best.length]
aa=pca_test$scores
str(pca_test)
test_reduced = pca_test$scores[,1:best.length]
str(test_reduced)
colnames(test_reduced)
test_result = predict(svm.bestmod, newdata=test_reduced)
head(test_result)
svm.submissionTest = data.frame(Id=seq(1,nrow(test_data)),
Solution=test_result)
write.csv(svm.submissionTest, 'testResults_pca_svm.csv',
row.names=F)
