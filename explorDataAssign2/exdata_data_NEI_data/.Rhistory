g=ggplot(maacs,aes(pm25,no2))
g+geom_point()
g+geom_point()+geom_smooth(method=“lm")
g+geom_point()+geom_smooth(method="lm")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
str(factor(Month))
str(factor(airquality$Month))
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
plot(p)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + stats_smooth("loess")
m=matrix(data=cbind(rnorm(30,0),rnorm(30,2),rnorm(30,5)),nrow=30,ncol=3)
head(m)
str(m)
type(m)
mode(m)
typeof(m)
summary(m)
library(ggplot2)
qplot(V1,V2,data=m)
qplot(V1,V2,data=as.dataframe(m))
?apply
apply(m,1,mean)
apply(m,2,mean)
apply(m,2,function(x) length(x[x<0]))
apply(m,2,function(x) x[x<0])
apply(m,2,function(x) x<0)
apply(m,2,function(x) x[x<0])
apply(m,2,function(x) length(x[x<0])
)
apply(m,2,is.vector)
apply(m,1,is.vector)
sample(1:5)
?rbind
fileUrl="￼"
fileUrl="https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD￼￼￼"
download.file(fileUrl,destfile="restaurants.csv",method="curl")
restData=read.csv("restaurants.csv")
head(restData)
restData=read.csv("restaurants.csv")
head(restData)
tail(restData,n=3)
names(restData)
str(restData)
typeof(restData)
quantile(restData$councilDistrict)
quantile(restData$councilDistrict,na.rm = T)
table(restData$zipCode,useNA = "ifany")
?table
apply(restData,2,function(x) sum(is.na(x)))
names(restData)
apply(restData,1,function(x) sum(is.na(x)))
any(is.na(restData$councilDistrict>0))
any(is.na(restData$councilDistrict0))
colSums(is.na(restData))
all(colSums(is.na(restData))==0)
table(restData$zipCode %in% c("21232","21212"))
table(restData$zipCode in c("21232","21212"))
restData[restData$zipCode %in% c("21212")]
restData[restData$zipCode %in% c("21212"),]
head(warbreaks)
library(datasets)
head(warbreaks)
head(warpbreaks)
warpbreaks$replicate=rep(1:9,len=54)
str(warpbreaks)
xt=xtabs(breaks~.,data=warpbreaks)
xt
apply(warpbreaks,1,mean)
head(warpbreaks)
apply(warpbreaks,2,mean)
str(warpbreaks)
mean(warpbreaks$breaks)
head(restData)
restData$nearMe=restData$neighborhood %in% c(""Roland Park)
restData$nearMe=restData$neighborhood %in% c(""Roland Park"")
restData$nearMe=restData$neighborhood %in% c("Roland Park")
table(restData$nearMe)
str(restData)
restData$ZipWrong=ifelse(restData$zipCode<0,T,F)
restData#zipGroup=cut(resD)
restData#zipGroup=cut(restData$zipCode,breaks=quantile(restData$zipCode))
？relevel
?relevel
yesno=sample(c("yes","no"),size=10,replace=T)
yesno
yesnofac=factor(yesno,levels=c("yes","no"))
yesnofac
relevel(yesnofac,ref="yes")
relevel(yesnofac,ref="no")
as.numeric(yesnofac)
head(restData$zipCode)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
?cut2
library(plyr)
?mutate
library(reshape2)
head(mtcars)
str(mtcars)
names(mtcars)
rwonames(mtcars)
rownames(mtcars)
?dcast
?tapply
?ddply
?ave
spraySums=ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum))
spraySums
ddply(InsectSprays,.(spray),summarize, sum=sum(count))
?ddply
?merge
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
authors
books
intersect(authors,books)
m1=merge(authors,books)
m1
m1[m1$"surname"=="Tukey",]
m1=merge(authors,books,by.x="surname",by.y="name")
m1
books
authors
unique(authors#authors)
$authors)
unique(authors$surname)
names(books)
names(authors)
authors
books
rm(list=ls())
fileurl="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl,dest="data.csv",method="curl")
data=read.csv("data.csv")
str(data)
table(data$ACR)
table(data$AGS)
aa=(data$ACR==3 & data$AGS==6)
str(aa)
sum(aa)
sum(data$ACR)
which(aa)
library(jpeg)
install.packages("jpeg")
require(jpeg)
?readJPEG
fileurl="https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileurl,dest="1.jpg",method="curl")
pic=readJPEG("1.jpg",native = T)
str(pic)
typeof(pic)
class(pic)
quantile(pic,c(0.3,0.8))
?intersect
fileurl1="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileurl2="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileurl1,"dest=gdp.csv",method="curl")
download.file(fileurl2,"edu.csv",method="auto")
download.file(fileurl2,"edu.csv",method="curl")
gdpdf=read.csv("dest=gdp.csv")
str(gdpdf)
names(gdpdf)
gdpdf=read.csv("GDP.csv")
str(gdpdf)
gdpdf=read.csv("dest=gdp.csv",skip=3)
str(gdpdf)
gdpdf=read.csv("dest=gdp.csv",skip=5)
str(gdpdf)
gdpdf=read.csv("dest=gdp.csv",skip=5,header = F)
str(gdpdf)
fileurl1
fileurl2
download.file(fileurl1,"gdp.csv")
download.file(fileurl1,"gdp.csv",method="curl")
download.file(fileurl2,"edu.csv",method="curl")
gdp=read.csv("gdp.csv")
str(gdp)
head(gdp)
gdp=read.csv("gdp.csv",skip=3)
head(gdp)
rownames(gdp)
colnames(gdp)
edu=read.csv("edu.csv")
head(edu)
str(edu)
length(intersect(gdp$X,edu$CountryCode))
head(gdp)
unique(gdp$X)
m1=merge(gdp,edu,by.x=X,by.y=CountryCode)
colnames(gdp)[1]
colnames(gdp)[1]="code"
m1=merge(gdp,edu,by.x=code,by.y=CountryCode)
head(gdp)
m1=merge(gdp,edu,by.x="code",by.y="CountryCode")
nrow(m1)
ncol(m1)
arrange(gdp,desc(US.dolloars))
arrange(gdp,desc(US.dollors))
arrange(gdp,desc(US.dollors.))
arrange(gdp,desc(US.dollars.))
data_ranked=arrange(gdp,desc(US.dollors))
data_ranked=arrange(gdp,desc(US.dollars))
data_ranked=arrange(gdp,desc(US.dollars.))
head(data_ranked)
m1$"High income:OECD"
names(m1)
names(edu)
rm(list=ls())
dtGDP=data.table(read.csv("gdp.csv",skip=4,nrows=215))
library(data.table)
dtGDP=data.table(read.csv("gdp.csv",skip=4,nrows=215))
head(dtGDP)
dtGDP=dtGDP[X!=""]
head(dtGDP)
dtGDP
dtGDP=data.table(read.csv("gdp.csv",skip=3,nrows=215))
dtGDP
dtGDP=dtGDP[X!=""]
dtGDP
dtGDP=dtGDP[,list(X,Ranking,Economy,US.dollars.)]
setnames(dtGDP,c("X","Ranking","Economy","US.dollars"),c("CountryCode","rankingGDP","Long.Name","gdp"))
names(dtGDP)
setnames(dtGDP,c("X","Ranking","Economy","US.dollars."),c("CountryCode","rankingGDP","Long.Name","gdp"))
dtEd=datatable(read.csv("edu.csv"))
dtEd=data.table(read.csv("edu.csv"))
dt=merge(dtGDP,dtEd,all=T,by=c("countryCode"))
dt=merge(dtGDP,dtEd,all=T,by=c("CountryCode"))
length(intersect(dtGDP$CountryCode, dtEd$CountryCode))
sum(!is.na(unique(dt$rankingGDP)))
names(dt)
colnames(dt)
dt$Income.Group
dt[order(rankingGDP,decreasing=T),list(CountryCode,Long.Name.x,long.Name.y,rankingGDP,gdp)][13]
dt[order(rankingGDP,decreasing=T),list(CountryCode,Long.Name.x,Long.Name.y,rankingGDP,gdp)][13]
dt[,mean(rankingGDP,na.rm=T),by=Income.Group]
breaks=quantile(dt$rankingGDP, probs=seq(0,1,length=5),na.rm=T)
breaks
dt$quantileGDP=cut(dt$rankingGDP,breaks=breaks)
dt[Income.Group=="Lower middle income",.N,by=c("Income.Group","quantileGDP")]
(0,1,length=5)
seq(0,1,length=5)
seq(0,1,length=4)
seq(0,1,length=6)
breaks=quantile(dt$rankingGDP, probs=seq(0,1,length=6),na.rm=T)
dt$quantileGDP=cut(dt$rankingGDP,breaks=breaks)
dt[Income.Group=="Lower middle income",.N,by=c("Income.Group","quantileGDP")]
sum(!is.na(unique(dt$rankingGDP)))
sum(!is.na(unique(dt$CountryCode)))
load(datasets)
load(dataset)
head(iris)
str(iris)
load(dplyer)
load(dplyr)
load(ddply)
?ddply
load(plry)
load(plyr)
load(ddply)
library(ddply)
library(plyr)
head(InsectSprays)
str(iris)
unique(iris$Petal.Width)
iris$Petal.Width = as.factor(iris$Petal.Width)
?ddply
ddply(iris,.(Species), summarise, mean=mean(Petal.Length))
ddply(iris,.(Species, Petal.Width), summarise, mean=mean(Petal.Length))
ddply(iris,.(Species, Petal.Width), summarise, numcolwise(mean))
ddply(iris,.(Species), summarise, numcolwise(mean))
setwd("~/code/rLearning/playground/explorDataAssign2/exdata_data_NEI_data")
library(data.table)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
dt_NEI = data.table(NEI)
dt_SCC = data.table(SCC)
rm(NEI, SCC)# clean data to save some memory
library(ggplot2)
setkey(dt_NEI, fips)
baltimoreData = dt_NEI["24510"]
baltimoreYearly_Emission =
baltimoreData[,lapply(.SD, sum),
.SDcol=("Emissions"),by=c("year", "type")]
ggplot(baltimoreYearly_Emission, aes(year, Emissions))
+geom_point(aes(color=type), size=4,alpha=1/2)
+labs(title="Change of different type of emissions in Baltimore city")
+labs(x="Year",y="Emission (ton)")
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_point(aes(color=type), size=4,alpha=1/2)
+labs(title="Change of different type of emissions in Baltimore city")
+labs(x="Year",y="Emission (ton)")
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_point(aes(color=type), size=4,alpha=1/2)+
labs(title="Change of different type of emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(aes(color=type), size=4,alpha=1/2)+
labs(title="Change of different type of emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(aes(color=type), size=1.5,alpha=1)+
labs(title="Change of different type of emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
png("plot3.png",width=480,height=480)
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(aes(color=type), size=1.5,alpha=1)+
labs(title="Change of different type of emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
dev.off()
png("plot3.png",width=600,height=480)
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(aes(color=type), size=1.5,alpha=1)+
labs(title="Change of different type of emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
dev.off()
grep(SCC, "coal combustion")
grep(dt_SCC, "coal combustion")
grep(dt_SCC$Short.Name, "coal combustion")
?grep
grep("coal combustion",dt_SCC$Short.Name)
grep("combustion",dt_SCC$Short.Name)
dt_SCC[56]
grep("coal",dt_SCC$EI.Sector)
grep("Coal",dt_SCC$EI.Sector)
unique[dt_SCC[grep("Coal",dt_SCC$EI.Sector)]]
unique[dt_SCC[grep("Coal",dt_SCC$EI.Sector),]]
unique(]dt_SCC[grep("Coal",dt_SCC$EI.Sector),])
unique(dt_SCC[grep("Coal",dt_SCC$EI.Sector),])
unique(dt_SCC$EI.Sector[grep("Coal",dt_SCC$EI.Sector),])
unique(dt_SCC$EI.Sector[grep("Coal",dt_SCC$EI.Sector)])
sccCode = dt_SCC$SCC[grep("coal",dt_SCC$EI.Sector, ignore.case = T)]
sccCode
dt_SCC[dt_SCC$SCC %in% sccCode,]
data=dt_SCC[dt_SCC$SCC %in% sccCode,]
View(data)
unique(sccCode)
coalSCCEmission = dt_NEI[dt_NEI$SCC %in% sccCode,]
View(coalSCCEmission)
sum(is.na(dt_NEI$fips))
sum(is.na(coalSCCEmission$fips))
?is.na
coalSCCEmission[1,]
is.na(coalSCCEmission[1,]$fips)
is.nan(coalSCCEmission[1,]$fips)
coalSCCEmission_grouped =
coalSCCEmission[,lapply(.SD, sum),
.SDcol=("Emissions"),by=c("year")]
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(size=1.5,alpha=1)+
labs(title="Change of coal combustion related emissions in US")+
labs(x="Year",y="Emission (ton)")
ggplot(coalSCCEmission_grouped, aes(year, Emissions)) +
geom_point(size=1.5,alpha=1)+
labs(title="Change of coal combustion related emissions in US")+
labs(x="Year",y="Emission (ton)")
ggplot(coalSCCEmission_grouped, aes(year, Emissions)) +
geom_line(size=1.5,alpha=1)+
labs(title="Change of coal combustion related emissions in US")+
labs(x="Year",y="Emission (ton)")
png("plot4.png",width=600,height=480)
ggplot(coalSCCEmission_grouped, aes(year, Emissions)) +
geom_line(size=1.5,alpha=1)+
labs(title="Change of coal combustion related emissions in US")+
labs(x="Year",y="Emission (ton)")
dev.off()
View(dt_SCC)
unique(dt_SCC$EI.Sector[grep("On-Road", dt_SCC$EI.Sector)])
setkey(dt_NEI, fips, type)
baltimoreYearly_Emission = dt_NEI(J["24510", "ON-ROAD"])
baltimoreYearly_Emission = dt_NEI[J["24510", "ON-ROAD"]]
baltimoreYearly_Emission = dt_NEI[J("24510", "ON-ROAD")]
View(baltimoreYearly_Emission)
baltimoreData = dt_NEI[J("24510", "ON-ROAD")]
baltimoreYearly_Emission =
baltimoreData[,lapply(.SD, sum),
.SDcol=("Emissions"),by=c("year")]
View(baltimoreYearly_Emission)
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(aes(color=type), size=1.5,alpha=1)+
labs(title="Change of motor vehicles emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(size=1.5,alpha=1)+
labs(title="Change of motor vehicles emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(size=1.5,alpha=1)+
geom_point()+
labs(title="Change of motor vehicles emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(size=1.5,alpha=0.7)+
geom_point(size=4,alpha=1)+
labs(title="Change of motor vehicles emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
png("plot5.png",width=600,height=480)
ggplot(baltimoreYearly_Emission, aes(year, Emissions)) +
geom_line(size=1.5,alpha=0.7)+
geom_point(size=4,alpha=1)+
labs(title="Change of motor vehicles emissions in Baltimore city")+
labs(x="Year",y="Emission (ton)")
dev.off()
compareData = dt_NEI[J(c("24510","06037"), "ON-ROAD")]
compareData_grouped =
compareData[,lapply(.SD, sum),
.SDcol=("Emissions"),by=c("year", "fips")]
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")+
scale_colour_discrete(name  ="Area",
breaks=c("Baltimore", "LA"),
labels=c("Baltimore", "LA"))
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")+
scale_shape_discrete(name  ="Area",
breaks=c("Baltimore", "LA"),
labels=c("Baltimore", "LA"))
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")+
scale_colour_manual("",
breaks = c("B","LA"),
values = c("B","LA"))
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")+
scale_colour_manual("",
breaks = c("24510","06037"),
values = c("B","LA"))
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")+
scale_colour_manual("",
breaks = c("24510","06037"),
values = c("24510","06037"))
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")+
scale_colour_discrete(name  ="City",
breaks=c("24510", "06037"),
labels=c("Woman", "Man"))
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore city and LA")+
labs(x="Year",y="Emission (ton)")+
scale_colour_discrete(name  ="City",
breaks=c("24510", "06037"),
labels=c("Baltimore", "LA"))
png("plot6.png",width=600,height=480)
ggplot(compareData_grouped, aes(year, Emissions)) +
geom_line(aes(color=fips),size=1.5,alpha=0.7)+
geom_point()+
labs(title="Comparison of motor vehicles emissions in Baltimore and LA")+
labs(x="Year",y="Emission (ton)")+
scale_colour_discrete(name  ="City",
breaks=c("24510", "06037"),
labels=c("Baltimore", "LA"))
dev.off()
